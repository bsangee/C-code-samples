/**
 * @input A : array of strings termination by '\0'
 * @input n1 : number of strings in array A
 * 
 * @Output string. Make sure the string is '\0' terminated.
 */
char* longestCommonPrefix(char** A, int n1) {
    int i,j;
    int len = strlen(A[0]);
    char* B;
    int flag = 0;
    int k=0;
    B = (char *)malloc((sizeof (char)) * len + 1);
    if(n1 == 1){
        return A[0];
    }
    for(i=0;i<len;i++){
        flag = 0;
        for(j=0;j<n1 -1;j++){
            //printf("j:%d i:%d n1:%d", j,i,n1);
            if(A[j][i] == '\0' || A[j+1][i] == '\0'){
                         B[k] = '\0';
                        return B;
                
            }
            if(A[j][i] == A[j+1][i] ){
                //printf("A[j][i] %c A[j+1][i] %c j %d i %d", A[j][i], A[j+1][i], j, i);
                flag = 1;
            }
            if(flag == 1 && j==n1-2){
                if(A[j][i] == A[j+1][i])
                {
                    if(A[j][i] != '\0' && A[j+1][i] != '\0'){
                    //printf("B %c", B[k]);
                    B[k] = A[j][i];
                    k++;
                    }
                    else{
                        printf("One of them is null");
                        B[k] = '\0';
                        return B;
                    }
                }    
            }
        }
    
    }
  
    B[k]='\0';
    
    
    return B;
}
